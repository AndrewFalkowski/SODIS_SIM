from pvlib import locationfrom pvlib import irradianceimport pandas as pdfrom matplotlib import pyplot as pltimport datetime# from pvlib.forecast import GFS, NAM, NDFD, HRRR, RAP#%%class ClearSkyIrradiance:    def __init__(self, lat = 37.8, lon = -122.4, tz='America/Los_Angeles'):        # assuming location of San Fransisco        self.site = location.Location(lat, lon, tz=tz)    def get_irradiance(self, date, tilt, surface_azimuth):        # Creates one day's worth of 10 min intervals        times = pd.date_range(date, freq='1min', periods=60*24,                              tz=self.site.tz)        # Generate clearsky data using the Ineichen model, which is the default        # The get_clearsky method returns a dataframe with values for GHI, DNI,        # and DHI        clearsky = self.site.get_clearsky(times)        # Get solar azimuth and zenith to pass to the transposition function        solar_position = self.site.get_solarposition(times=times)        # Use the get_total_irradiance function to transpose the GHI to POA        # plane of array        POA_irradiance = irradiance.get_total_irradiance(            surface_tilt=tilt,            surface_azimuth=surface_azimuth,            dni=clearsky['dni'],            ghi=clearsky['ghi'],            dhi=clearsky['dhi'],            solar_zenith=solar_position['apparent_zenith'],            solar_azimuth=solar_position['azimuth'])        # Return DataFrame with only GHI and POA        self.irrad_df =pd.DataFrame({'GHI': clearsky['ghi'],                            'DNI': clearsky['dni'],                            'DHI': clearsky['dhi'],                            'POA': POA_irradiance['poa_global']})        self.irrad_df.index = pd.date_range(f"{date} 00:00", f"{date} 23:59", freq="1min")        return self.irrad_df    def irrad_at_time(self, date, time):        irrad = self.irrad_df        irrad.index = irrad.index.astype('str')        irrad = irrad.loc[f'{date} {time}']        return irrad# to be implemented later# class CloudySkyIrradiance:#     def __init__(self, lat = 37.8, lon = -122.4, tz='America/Los_Angeles'):#         self.irrad_vars = ['ghi', 'dni', 'dhi']#         self.start = start = pd.Timestamp(datetime.date.today(), tz=tz)# # specify location (Tucson, AZ)# latitude, longitude, tz = 32.2, -110.9, 'US/Arizona'# # specify time range.# start = pd.Timestamp(datetime.date.today(), tz=tz)# end = start + pd.Timedelta(days=7)# irrad_vars =